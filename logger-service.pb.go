// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.0
// source: logger-service.proto

package pplogger

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ErrorMessage_Severity int32

const (
	ErrorMessage_NOTHING ErrorMessage_Severity = 0
	ErrorMessage_FATAL   ErrorMessage_Severity = 1
	ErrorMessage_SEVERE  ErrorMessage_Severity = 2
	ErrorMessage_WARNING ErrorMessage_Severity = 3
)

// Enum value maps for ErrorMessage_Severity.
var (
	ErrorMessage_Severity_name = map[int32]string{
		0: "NOTHING",
		1: "FATAL",
		2: "SEVERE",
		3: "WARNING",
	}
	ErrorMessage_Severity_value = map[string]int32{
		"NOTHING": 0,
		"FATAL":   1,
		"SEVERE":  2,
		"WARNING": 3,
	}
)

func (x ErrorMessage_Severity) Enum() *ErrorMessage_Severity {
	p := new(ErrorMessage_Severity)
	*p = x
	return p
}

func (x ErrorMessage_Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorMessage_Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_logger_service_proto_enumTypes[0].Descriptor()
}

func (ErrorMessage_Severity) Type() protoreflect.EnumType {
	return &file_logger_service_proto_enumTypes[0]
}

func (x ErrorMessage_Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorMessage_Severity.Descriptor instead.
func (ErrorMessage_Severity) EnumDescriptor() ([]byte, []int) {
	return file_logger_service_proto_rawDescGZIP(), []int{0, 0}
}

type ErrorMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service  string                `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Function string                `protobuf:"bytes,2,opt,name=function,proto3" json:"function,omitempty"`
	Severity ErrorMessage_Severity `protobuf:"varint,3,opt,name=severity,proto3,enum=pplogger.ErrorMessage_Severity" json:"severity,omitempty"`
	Message  string                `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ErrorMessage) Reset() {
	*x = ErrorMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logger_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorMessage) ProtoMessage() {}

func (x *ErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_logger_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorMessage.ProtoReflect.Descriptor instead.
func (*ErrorMessage) Descriptor() ([]byte, []int) {
	return file_logger_service_proto_rawDescGZIP(), []int{0}
}

func (x *ErrorMessage) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *ErrorMessage) GetFunction() string {
	if x != nil {
		return x.Function
	}
	return ""
}

func (x *ErrorMessage) GetSeverity() ErrorMessage_Severity {
	if x != nil {
		return x.Severity
	}
	return ErrorMessage_NOTHING
}

func (x *ErrorMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeviceLogMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User      string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	DeviceEUI string `protobuf:"bytes,2,opt,name=deviceEUI,proto3" json:"deviceEUI,omitempty"`
	Message   string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeviceLogMessage) Reset() {
	*x = DeviceLogMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logger_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceLogMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceLogMessage) ProtoMessage() {}

func (x *DeviceLogMessage) ProtoReflect() protoreflect.Message {
	mi := &file_logger_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceLogMessage.ProtoReflect.Descriptor instead.
func (*DeviceLogMessage) Descriptor() ([]byte, []int) {
	return file_logger_service_proto_rawDescGZIP(), []int{1}
}

func (x *DeviceLogMessage) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *DeviceLogMessage) GetDeviceEUI() string {
	if x != nil {
		return x.DeviceEUI
	}
	return ""
}

func (x *DeviceLogMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type OpAlarmMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service   string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	DeviceEUI string `protobuf:"bytes,2,opt,name=deviceEUI,proto3" json:"deviceEUI,omitempty"`
	AlarmType string `protobuf:"bytes,3,opt,name=alarmType,proto3" json:"alarmType,omitempty"`
	Message   string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *OpAlarmMessage) Reset() {
	*x = OpAlarmMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logger_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpAlarmMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpAlarmMessage) ProtoMessage() {}

func (x *OpAlarmMessage) ProtoReflect() protoreflect.Message {
	mi := &file_logger_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpAlarmMessage.ProtoReflect.Descriptor instead.
func (*OpAlarmMessage) Descriptor() ([]byte, []int) {
	return file_logger_service_proto_rawDescGZIP(), []int{2}
}

func (x *OpAlarmMessage) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *OpAlarmMessage) GetDeviceEUI() string {
	if x != nil {
		return x.DeviceEUI
	}
	return ""
}

func (x *OpAlarmMessage) GetAlarmType() string {
	if x != nil {
		return x.AlarmType
	}
	return ""
}

func (x *OpAlarmMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reply string `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logger_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_logger_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_logger_service_proto_rawDescGZIP(), []int{3}
}

func (x *Response) GetReply() string {
	if x != nil {
		return x.Reply
	}
	return ""
}

var File_logger_service_proto protoreflect.FileDescriptor

var file_logger_service_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x70, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72,
	0x22, 0xd8, 0x01, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72,
	0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x70, 0x70, 0x6c, 0x6f,
	0x67, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65,
	0x72, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3b,
	0x0a, 0x08, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x4f,
	0x54, 0x48, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x41, 0x54, 0x41, 0x4c,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x45, 0x56, 0x45, 0x52, 0x45, 0x10, 0x02, 0x12, 0x0b,
	0x0a, 0x07, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x22, 0x5e, 0x0a, 0x10, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x55, 0x49,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x55,
	0x49, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x0e,
	0x4f, 0x70, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x45, 0x55, 0x49, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x45, 0x55, 0x49, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x61, 0x72, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x20,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x32, 0xcb, 0x01, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x16,
	0x2e, 0x70, 0x70, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x12, 0x2e, 0x70, 0x70, 0x6c, 0x6f, 0x67, 0x67, 0x65,
	0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0e,
	0x4c, 0x6f, 0x67, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1a,
	0x2e, 0x70, 0x70, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x12, 0x2e, 0x70, 0x70, 0x6c,
	0x6f, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3c, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x4f, 0x70, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x12, 0x18,
	0x2e, 0x70, 0x70, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x12, 0x2e, 0x70, 0x70, 0x6c, 0x6f, 0x67,
	0x67, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x1f,
	0x5a, 0x1d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x75, 0x6b,
	0x68, 0x61, 0x6a, 0x61, 0x74, 0x61, 0x2f, 0x70, 0x70, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_logger_service_proto_rawDescOnce sync.Once
	file_logger_service_proto_rawDescData = file_logger_service_proto_rawDesc
)

func file_logger_service_proto_rawDescGZIP() []byte {
	file_logger_service_proto_rawDescOnce.Do(func() {
		file_logger_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_logger_service_proto_rawDescData)
	})
	return file_logger_service_proto_rawDescData
}

var file_logger_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_logger_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_logger_service_proto_goTypes = []interface{}{
	(ErrorMessage_Severity)(0), // 0: pplogger.ErrorMessage.Severity
	(*ErrorMessage)(nil),       // 1: pplogger.ErrorMessage
	(*DeviceLogMessage)(nil),   // 2: pplogger.DeviceLogMessage
	(*OpAlarmMessage)(nil),     // 3: pplogger.OpAlarmMessage
	(*Response)(nil),           // 4: pplogger.Response
}
var file_logger_service_proto_depIdxs = []int32{
	0, // 0: pplogger.ErrorMessage.severity:type_name -> pplogger.ErrorMessage.Severity
	1, // 1: pplogger.LoggerService.LogError:input_type -> pplogger.ErrorMessage
	2, // 2: pplogger.LoggerService.LogDeviceEvent:input_type -> pplogger.DeviceLogMessage
	3, // 3: pplogger.LoggerService.LogOpAlarm:input_type -> pplogger.OpAlarmMessage
	4, // 4: pplogger.LoggerService.LogError:output_type -> pplogger.Response
	4, // 5: pplogger.LoggerService.LogDeviceEvent:output_type -> pplogger.Response
	4, // 6: pplogger.LoggerService.LogOpAlarm:output_type -> pplogger.Response
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_logger_service_proto_init() }
func file_logger_service_proto_init() {
	if File_logger_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_logger_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logger_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceLogMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logger_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpAlarmMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logger_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_logger_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_logger_service_proto_goTypes,
		DependencyIndexes: file_logger_service_proto_depIdxs,
		EnumInfos:         file_logger_service_proto_enumTypes,
		MessageInfos:      file_logger_service_proto_msgTypes,
	}.Build()
	File_logger_service_proto = out.File
	file_logger_service_proto_rawDesc = nil
	file_logger_service_proto_goTypes = nil
	file_logger_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LoggerServiceClient is the client API for LoggerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LoggerServiceClient interface {
	LogError(ctx context.Context, in *ErrorMessage, opts ...grpc.CallOption) (*Response, error)
	LogDeviceEvent(ctx context.Context, in *DeviceLogMessage, opts ...grpc.CallOption) (*Response, error)
	LogOpAlarm(ctx context.Context, in *OpAlarmMessage, opts ...grpc.CallOption) (*Response, error)
}

type loggerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewLoggerServiceClient(cc grpc.ClientConnInterface) LoggerServiceClient {
	return &loggerServiceClient{cc}
}

func (c *loggerServiceClient) LogError(ctx context.Context, in *ErrorMessage, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/pplogger.LoggerService/LogError", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loggerServiceClient) LogDeviceEvent(ctx context.Context, in *DeviceLogMessage, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/pplogger.LoggerService/LogDeviceEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loggerServiceClient) LogOpAlarm(ctx context.Context, in *OpAlarmMessage, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/pplogger.LoggerService/LogOpAlarm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LoggerServiceServer is the server API for LoggerService service.
type LoggerServiceServer interface {
	LogError(context.Context, *ErrorMessage) (*Response, error)
	LogDeviceEvent(context.Context, *DeviceLogMessage) (*Response, error)
	LogOpAlarm(context.Context, *OpAlarmMessage) (*Response, error)
}

// UnimplementedLoggerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLoggerServiceServer struct {
}

func (*UnimplementedLoggerServiceServer) LogError(context.Context, *ErrorMessage) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LogError not implemented")
}
func (*UnimplementedLoggerServiceServer) LogDeviceEvent(context.Context, *DeviceLogMessage) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LogDeviceEvent not implemented")
}
func (*UnimplementedLoggerServiceServer) LogOpAlarm(context.Context, *OpAlarmMessage) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LogOpAlarm not implemented")
}

func RegisterLoggerServiceServer(s *grpc.Server, srv LoggerServiceServer) {
	s.RegisterService(&_LoggerService_serviceDesc, srv)
}

func _LoggerService_LogError_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ErrorMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoggerServiceServer).LogError(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pplogger.LoggerService/LogError",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoggerServiceServer).LogError(ctx, req.(*ErrorMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoggerService_LogDeviceEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeviceLogMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoggerServiceServer).LogDeviceEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pplogger.LoggerService/LogDeviceEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoggerServiceServer).LogDeviceEvent(ctx, req.(*DeviceLogMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoggerService_LogOpAlarm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpAlarmMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoggerServiceServer).LogOpAlarm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pplogger.LoggerService/LogOpAlarm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoggerServiceServer).LogOpAlarm(ctx, req.(*OpAlarmMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _LoggerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pplogger.LoggerService",
	HandlerType: (*LoggerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LogError",
			Handler:    _LoggerService_LogError_Handler,
		},
		{
			MethodName: "LogDeviceEvent",
			Handler:    _LoggerService_LogDeviceEvent_Handler,
		},
		{
			MethodName: "LogOpAlarm",
			Handler:    _LoggerService_LogOpAlarm_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "logger-service.proto",
}
